@inproceedings{frolich_generic_2021,
 abstract = {Exploratory programming is a form of incremental program development in which the programmer can try and compare definitions, receives immediate feedback and can simultaneously experiment with the language, the program and input data. Read-Eval-Print-Loop interpreters (REPLs) and computational notebooks are popular tools for exploratory programming. However, their usability, capabilities and user-friendliness are strongly dependent on the underlying interpreter and, in particular, on the ad hoc engineering required to ready the underlying interpreter for incremental program development. To break this dependency, this paper adopts a principled approach and implements a so-called exploring interpreter as a back-end to support various development environments for exploratory programming.},
 address = {Cham},
 author = {Frolich, Damian and van Binsbergen, L. Thomas},
 booktitle = {Trends in Functional Programming},
 doi = {10.1007/978-3-030-83978-9_2},
 editor = {Zsók, Viktória and Hughes, John},
 isbn = {9783030839789},
 language = {en},
 pages = {24--43},
 publisher = {Springer International Publishing},
 title = {A Generic Back-End for Exploratory Programming},
 year = {2021}
}

