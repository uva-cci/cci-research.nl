<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>L. Thomas van Binsbergen | Complex Cyber-Infrastructures (CCI)</title><link>https://cci-research.nl/author/l.-thomas-van-binsbergen/</link><atom:link href="https://cci-research.nl/author/l.-thomas-van-binsbergen/index.xml" rel="self" type="application/rss+xml"/><description>L. Thomas van Binsbergen</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Thu, 08 Feb 2024 00:00:00 +0000</lastBuildDate><image><url>https://cci-research.nl/images/logo_hu5a1000236f6e181a977795e6532452c2_304385_300x300_fit_lanczos_3.png</url><title>L. Thomas van Binsbergen</title><link>https://cci-research.nl/author/l.-thomas-van-binsbergen/</link></image><item><title>Paper Accepted @JSS</title><link>https://cci-research.nl/post/paper-accepted-at-jss24-02/</link><pubDate>Thu, 08 Feb 2024 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/paper-accepted-at-jss24-02/</guid><description>&lt;p>The paper titled &lt;strong>iCoLa+: An extensible meta-language with support for exploratory language development&lt;/strong>
by Damian Frolich and L. Thomas van Binsbergen
is accepted by the &lt;a href="https://www.sciencedirect.com/science/article/pii/S0164121224000220?via%3Dihub" target="_blank" rel="noopener">Journal of Systems and Software&lt;/a>.&lt;/p>
&lt;h3 id="abstract">Abstract&lt;/h3>
&lt;p>Programming languages providing high-level abstractions can increase a programmers’ productivity and the safety of a program. Language-oriented programming is a paradigm in which domain-specific languages are developed to solve problems within specific domains with (high-level) abstractions relevant to those domains. However, language development involves complex design and engineering processes. These processes can be simplified by reusing (parts of) existing languages and by offering language-parametric tooling.&lt;/p>
&lt;p>In this paper we present &lt;em>iCoLa+&lt;/em>, an extensible meta-language implemented in Haskell supporting incremental (meta-)programming based on reusable components. We demonstrate &lt;em>iCoLa+&lt;/em> through the construction of the Imp, SIMPLE, and MiniJava languages via the composition and restriction of language fragments, demonstrate the variability of our approach through the construction of several languages using a fixed-set of operators, and demonstrate the different forms of extensions possible in &lt;em>iCoLa+&lt;/em>.&lt;/p></description></item><item><title>Compiler construction</title><link>https://cci-research.nl/teaching/compiler_construction/</link><pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate><guid>https://cci-research.nl/teaching/compiler_construction/</guid><description/></item><item><title>Programmeertalen</title><link>https://cci-research.nl/teaching/programmeertalen/</link><pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate><guid>https://cci-research.nl/teaching/programmeertalen/</guid><description/></item><item><title>Software Evolution</title><link>https://cci-research.nl/teaching/software_evolution/</link><pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate><guid>https://cci-research.nl/teaching/software_evolution/</guid><description/></item><item><title>Just released: AMdEX Reference Architecture version 1</title><link>https://cci-research.nl/post/amdex-ram-v1/</link><pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/amdex-ram-v1/</guid><description>&lt;p>
The primary goal of &lt;a href="https://zenodo.org/records/10565916">the document&lt;/a> is to describe the AMdEX approach to sharing data and the AMdEX reference architecture comprised of governance solutions and technical solutions. Central to the approach are the AMdEX community members that cooperate as a consortium within AMdEX dataspaces and within a certain ecosystem. This document also explains how AMdEX works in practice, both from a user’s perspective, in relation to other initiatives, and by presenting existing use cases.
&lt;/p>
&lt;p>
In particular, this document describes:
&lt;ul>
&lt;li>The principles guiding the design of the AMdEX technical architecture&lt;/li>
&lt;li>The users, roles, (technical) components and protocols that form AMdEX dataspaces and ecosystems&lt;/li>
&lt;li>The administration and enforcement of policies within AMdEX&lt;/li>
&lt;li>Use cases from the AMdEX fieldlab project, explained in terms of the aforementioned roles and components
&lt;/li>
&lt;/ul>
&lt;/p>
&lt;p>
An important aspect of AMdEX is the explicit connection made between contractual agreements and applicable laws (soft infrastructure) on the one hand and the (hard) technical infrastructure on the other hand. This document describes how that connection is made and the process by which laws and contracts are integrated into the technical domain.
&lt;/p>
&lt;p>
This work is executed within the AMdEX Fieldlab project supported by Kansen Voor West EFRO (KVW00309) and the province of Noord-Holland.
&lt;/p></description></item><item><title>Thomas wins distinguished reviewer award for his SLE2023 reviews</title><link>https://cci-research.nl/post/thomas-sle-reviews/</link><pubDate>Wed, 15 Nov 2023 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/thomas-sle-reviews/</guid><description>&lt;p>
During &lt;a href="https://2023.splashcon.org/">SPLASH&lt;/a>, Thomas was awarded the ACM Distinguished Reviewer award for his role on the programme committee of the &lt;a href="http://www.sleconf.org/">Software Language Engineering conference&lt;/a>.
&lt;/p></description></item><item><title>Paper Accepted @SLE23</title><link>https://cci-research.nl/post/paper-accepted-at-sle23/</link><pubDate>Wed, 11 Oct 2023 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/paper-accepted-at-sle23/</guid><description>&lt;p>The paper titled &lt;strong>Adaptive Structural Operational Semantics&lt;/strong>
by Gwendal Jouneaux (Univ. Rennes, Inria, IRISA); Damian Frolich (University of Amsterdam);
Olivier Barais (Univ. Rennes, Inria, CNRS, IRISA); Benoit Combemale (Univ. Rennes, Inria, IRISA);
Gurvan Le Guernic (DGA Maîtrise de l’Information, Univ. Rennes, Inria, IRISA); Gunter Mussbacher (McGill University, Inria);
L. Thomas van Binsbergen (University of Amsterdam)
is accepted at the &lt;a href="https://2023.splashcon.org/home/sle-2023" target="_blank" rel="noopener">16th edition of the Software Language Engineering (SLE)&lt;/a> conference.&lt;/p>
&lt;h3 id="abstract">Abstract&lt;/h3>
&lt;p>Software systems evolve more and more in complex and changing environments, often requiring runtime adaptation
to best deliver their services. When self-adaptation is the
main concern of the system, a manual implementation of
the underlying feedback loop and trade-off analysis may be
desirable. However, the required expertise and substantial development effort make such implementations prohibitively
difficult when it is only a secondary concern for the given
domain. In this paper, we present ASOS, a metalanguage abstracting the runtime adaptation concern of a given domain
in the behavioral semantics of a domain-specific language
(DSL), freeing the language user from implementing it from
scratch for each system in the domain. We demonstrate our
approach on RobLANG, a procedural DSL for robotics, where
we abstract a recurrent energy-saving behavior depending
on the context. We provide formal semantics for ASOS and
pave the way for checking properties such as determinism,
completeness, and termination of the resulting self-adaptable
language. We provide first results on the performance of our
approach compared to a manual implementation of this self-
adaptable behavior. We demonstrate, for RobLANG, that our
approach provides suitable abstractions for specifying sound
adaptive operational semantics while being more efficient.&lt;/p></description></item><item><title>Just happened: Programming Languages in the Netherlands (PLNL) 2023</title><link>https://cci-research.nl/post/plnl-2023/</link><pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/plnl-2023/</guid><description>&lt;p>The workshop Programming Languages in the Netherlands, supported by &lt;a href="https://versen.nl" target="_blank" rel="noopener">VERSEN&lt;/a>, was a big success. A 12-presentation programme enticed plenty of discussion amoung the 50-60 participants. The CCI group contributed by organising the event (Thomas and Grace) and by giving two talks (Christopher on Seaso and Damian on language services).&lt;/p>
&lt;p>Many thanks to Grace for the help in organising the event, resulting in a very smooth workshop experience. The attached pictures give an impression of the event hosted in the Doelenzaal of the university library.&lt;/p>
&lt;p>PLNL is still looking for organisers for next year.&lt;/p>
&lt;p>&lt;img src="crowd.jpg" alt="PLNL2023">&lt;/p></description></item><item><title>Inter-faculty UvA funding success for CCI projects</title><link>https://cci-research.nl/post/rdt-projects-2023/</link><pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/rdt-projects-2023/</guid><description>&lt;p>Please find &lt;a href="https://www.uva.nl/en/content/news/news/2023/05/theme-based-collaboration-enters-next-phase-with-awarding-of-midsize-projects-and-seed-grants.html" target="_blank" rel="noopener">this&lt;/a> announcement on the internal (UvA) funding awarded for interdisciplinary research within certain themes.&lt;/p>
&lt;p>Thomas, Ana, and Tom with &lt;a href="https://www.uva.nl/en/about-the-uva/about-the-university/strategy/theme-based-collaboration/responsible-digital-transformations.html#Data-sharing-through-a-data-intermediary" target="_blank" rel="noopener">&amp;ldquo;Data sharing through a data intermediary&amp;rdquo;&lt;/a>&lt;/p>
&lt;p>Ana with the project &lt;a href="https://www.uva.nl/en/about-the-uva/about-the-university/strategy/theme-based-collaboration/responsible-digital-transformations.html#Sustainable-privacyenhanced-data" target="_blank" rel="noopener">&amp;ldquo;Sustainable privacy-enhanced data&amp;rdquo;&lt;/a>&lt;/p></description></item><item><title>Postdoc Position on Digitally Enforceable Data Sharing contracts</title><link>https://cci-research.nl/post/sspddp-postdoc-spring2023/</link><pubDate>Wed, 31 May 2023 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/sspddp-postdoc-spring2023/</guid><description>&lt;p>The University of Amsterdam (UvA) is looking for a Postdoctoral Researcher in the area of programming languages, formal methods, and distributed systems. The goal of the research is to enable the integration and automatic enforcement of high-level contract specification within distributed systems for data exchange and federated data processing. Possible outcomes are: (domain-specific) software languages, system architecture designs, and prototypes for verifying contract specifications, language implementations, and auditing/monitoring components. The offered contract is for a minimum of 12 months. The closing date is the 25th of June. The ideal starting date the 1st of August.&lt;/p>
&lt;p>The full vacancy text and application procedure can be found here: &lt;a href="https://vacatures.uva.nl/UvA/job/Postdoc-Position-on-Digitally-Enforceable-Data-Sharing-Contracts/771937302/" target="_blank" rel="noopener">https://vacatures.uva.nl/UvA/job/Postdoc-Position-on-Digitally-Enforceable-Data-Sharing-Contracts/771937302/&lt;/a>&lt;/p></description></item><item><title>Paper Accepted @IEEE eScience 2022</title><link>https://cci-research.nl/post/paper-accepted-escience/</link><pubDate>Fri, 20 Jan 2023 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/paper-accepted-escience/</guid><description>&lt;p>The paper titled &lt;b>Exploring the Enforcement of Private, Dynamic Policies on Medical Workflow Execution&lt;/b> by Christopher A.
Esterhuyse, Tim Muller, Thomas van Binsbergen, and Adam S. Z. Belloum was accepted at &lt;a
href="https://www.escience-conference.org/2022/">18th IEEE eScience Conference 2022: Democratizing Science&lt;/a>. &lt;/p>
&lt;h3>Abstract:&lt;/h3>
&lt;p>We report on the ideas and experiences of adapting Brane, a workflow execution framework, for use cases involving medical
data exchange and processing. These use cases impose new requirements on the system to enforce policies encoding safety
properties, ranging from access control to legal regulations pertaining to data privacy. Our approach emphasizes users' control
over the extent to which they cooperate in distributed execution, at the cost of revealing information about their policies.&lt;/p></description></item><item><title>Paper Accepted @AICOL-JURIX 2022</title><link>https://cci-research.nl/post/paper-accepted-aicol/</link><pubDate>Tue, 29 Nov 2022 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/paper-accepted-aicol/</guid><description>&lt;p>The paper titled &lt;b>Regulatory Services to Automate Compliance with Ex-post Enforcement&lt;/b> by Lu-Chi Liu, Mostafa Mohajeri Parizi, Thomas van Binsbergen, and Tom van Engers was accepted at &lt;a href="http://www.aicol.eu/">AICOL 2022: AI Approaches to the Complexity of Legal Systems&lt;/a>.
&lt;/p>
&lt;h3>Abstract:&lt;/h3>
&lt;p>Software systems are expected to comply with norms from a variety of sources. However, the increasing volume and the dynamism of norms make it rather difficult to have a fully compliant software system by design. This paper proposes a generic architecture of regulated software systems that facilitates compliance with high-level policies through regulatory services. Our architectural model has the flexibility to adapt to norm modifications and to norm violations by including ex-post enforcement mechanisms. The proposed solution is assessed using a case study and a prototype implementation in the eFLINT and ASC2 languages for modeling norms and software/social agents respectively.&lt;/p></description></item><item><title>Another Paper Accepted @SLE22</title><link>https://cci-research.nl/post/second-paper-accepted-at-sle22/</link><pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/second-paper-accepted-at-sle22/</guid><description>&lt;p>The CCI group is well presented at the &lt;a href="https://2022.splashcon.org/home/sle-2022" target="_blank" rel="noopener">15th edition of the Software Language Engineering (SLE)&lt;/a> with
another paper being accepted, titled: &lt;strong>A Language-Parametric Approach to Exploratory Programming Environments&lt;/strong>
by Thomas van Binsbergen, Damian Frolich, Mauricio Verano Merino, Joey Lai, Pierre Jeanjean, Tijs van der Storm, Benoit Combemale, and Olivier Barais.
This paper is a collaboration with the &lt;a href="https://www.diverse-team.fr/" target="_blank" rel="noopener">DiverSE team from Inria&lt;/a> and the &lt;a href="https://www.cwi.nl/research/groups/software-analysis-and-transformation" target="_blank" rel="noopener">CWI SWAT group&lt;/a>, and a significant contribution from a &lt;a href="https://scripties.uba.uva.nl/search?id=record_30195" target="_blank" rel="noopener">master&amp;rsquo;s thesis&lt;/a> done at the CCI group.&lt;/p>
&lt;h3 id="abstract">Abstract&lt;/h3>
&lt;p>Exploratory programming is a software development style in which code is a medium for prototyping ideas and solutions, and in which even the end-goal can evolve over time. Exploratory programming is valuable in various contexts such as programming education, data science, and end-user programming. However, there is a lack of appropriate tooling and language design principles to support exploratory programming. This paper presents a host language- and object language-independent protocol for exploratory programming akin to the Language Server Protocol. The protocol serves as a basis to develop novel (or extend existing) programming environments for exploratory programming such as computational notebooks and command-line REPLs. An architecture is presented on top of which prototype environments can be developed with relative ease, because existing (language) components can be reused. Our prototypes demonstrate that the proposed protocol is sufficiently expressive to support exploratory programming scenarios as encountered in literature within the software engineering, human-computer interaction and data science domains.&lt;/p></description></item><item><title>Paper Accepted @SLE22</title><link>https://cci-research.nl/post/paper-accepted-at-sle22/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/paper-accepted-at-sle22/</guid><description>&lt;p>The paper titled &lt;strong>iCoLa: A Compositional Meta-language with Support for Incremental Language Development&lt;/strong>
by Damian Frolich and Thomas van Binsbergen is accepted at the &lt;a href="https://2022.splashcon.org/home/sle-2022" target="_blank" rel="noopener">15th edition of the Software Language Engineering (SLE)&lt;/a> conference.&lt;/p>
&lt;h3 id="abstract">Abstract&lt;/h3>
&lt;p>Programming languages providing high-level abstractions can increase programming productivity and safety. Language-oriented programming is a paradigm in which specialized languages are developed to solve problems within specific domains with (high-level) abstractions relevant to those domains. However, language development involves complex design and engineering processes. These processes can be simplified by reusing (parts of) existing languages and by offering language-parametric tooling. In this paper we present iCoLa, a meta-language supporting incremental (meta-)programming based on reusable components. In our implementation of iCoLa, languages are first-class citizens, providing the full power of the host-language (Haskell) to compose and manipulate languages. Finally, we demonstrate iCoLa through a case-study in which we construct &lt;em>Imp&lt;/em>, &lt;em>SIMPLE&lt;/em>, and &lt;em>MiniJava&lt;/em> through the composition and restriction of language fragments and demonstrate the variability of our approach through the construction of several languages using a fixed-set of operators.&lt;/p></description></item><item><title>Paper Accepted @EUMAS2022</title><link>https://cci-research.nl/post/paper-accepted-eumas/</link><pubDate>Tue, 26 Jul 2022 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/paper-accepted-eumas/</guid><description>&lt;p>The paper titled &lt;b>Introducing Normative Advisors into MAS&lt;/b> by Mostafa Mohajeri Parizi, Thomas van Binsbergen, Giovanni Sileno and Tom van Engers was accepted at &lt;a href="http://www.ccc.cs.uni-duesseldorf.de/eumas2022/">The 19th European Conference on Multi-Agent Systems&lt;/a>.
&lt;/p>
&lt;h3>Abstract:&lt;/h3>
&lt;p>This paper introduces a modular architecture for integrating norms in autonomous agents and multi-agent systems. As the the interactions between norms and agents can be complex, this architecture utilizes multiple programmable components to model concepts such as adoption of multiple personal and/or collective possibly conflicting norms, interpretation and qualification between social and normative contexts, possibility of intentionally (non-)compliant behaviors and resolving conflicts between norms and desires (or other norms). The architecture revolves around &lt;i>normative advisors&lt;/i> that act as the bridge between intentional agents and the institutional reality. As a technical contribution, a running implementation of the architecture is presented based on the ASC2 (AgentScript) BDI framework and eFLINT norm reasoner.&lt;/p></description></item><item><title>Dynamic generation of access control policies from social policies</title><link>https://cci-research.nl/publication/van-binsbergen-dynamic-2022/</link><pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate><guid>https://cci-research.nl/publication/van-binsbergen-dynamic-2022/</guid><description/></item><item><title>A Generic Back-End for Exploratory Programming</title><link>https://cci-research.nl/publication/frolich-generic-2021/</link><pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate><guid>https://cci-research.nl/publication/frolich-generic-2021/</guid><description/></item><item><title>A principled approach to REPL interpreters</title><link>https://cci-research.nl/publication/van-binsbergen-principled-2020/</link><pubDate>Sun, 01 Nov 2020 00:00:00 +0000</pubDate><guid>https://cci-research.nl/publication/van-binsbergen-principled-2020/</guid><description/></item><item><title>eFLINT: a domain-specific language for executable norm specifications</title><link>https://cci-research.nl/publication/van-binsbergen-eflint-2020/</link><pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate><guid>https://cci-research.nl/publication/van-binsbergen-eflint-2020/</guid><description/></item><item><title>Paper Accepted at FORTE 2024</title><link>https://cci-research.nl/post/discotec24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cci-research.nl/post/discotec24/</guid><description>&lt;p>On the 20th of June, Christopher Esterhuyse and Tim Mueller presented their paper (with L. Thomas van Binsbergen)
on the novel &lt;strong>JustAct&lt;/strong> framework at the &lt;a href="https://www.discotec.org/2024" target="_blank" rel="noopener">2024 DisCoTec&lt;/a> federated conference, held this year in Groningen.
JustAct lays a foundation for the automatic enforcement of policies that are changed by the users on the fly.&lt;/p>
&lt;h3 id="abstract">Abstract&lt;/h3>
&lt;p>Inter-organisational data exchange is regulated by norms originating from sources ranging from individual consent to (inter)national laws. Verifying norm-compliance is complex because laws (e.g., GDPR) distribute responsibility and require accountability. Moreover, in some domains (e.g., healthcare), the norms themselves may be private. In contrast, standard solutions (e.g., access- and usage-control, smart contracts) reason about policies that are assumed to be public. Instead, we present a novel framework prescribing how decentralised agents decide which actions are justified, despite their partial views of the policy. Crucially, justifications are universal, e.g., accepted by future auditors. Agents establish a common notion of compliance through an (externally synchronized) agreement, which is the basis of each justification defined by policy fragments agents autonomously create, gossip, and assemble.&lt;/p></description></item></channel></rss>